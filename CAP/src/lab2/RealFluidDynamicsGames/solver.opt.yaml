--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 50, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '360'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 63, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '360'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        diffuse
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          diffuse
    DebugLoc:        { File: solver.c, Line: 69, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 111, Column: 5 }
Function:        advect
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '360'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 146, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          add_source
    DebugLoc:        { File: solver.c, Line: 11, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '0'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dens_step
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 150, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 148, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          diffuse
    DebugLoc:        { File: solver.c, Line: 69, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dens_step
  - String:          ':'
  - Line:            '4'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 150, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 126, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '220'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          project
  - String:          ':'
  - Line:            '12'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 141, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 127, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '220'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          project
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 140, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 129, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 141, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 140, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 129, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 155, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          add_source
    DebugLoc:        { File: solver.c, Line: 11, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '0'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 166, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 156, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          add_source
    DebugLoc:        { File: solver.c, Line: 11, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-15000'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 165, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 158, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          diffuse
    DebugLoc:        { File: solver.c, Line: 69, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '30'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '5'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 160, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          diffuse
    DebugLoc:        { File: solver.c, Line: 69, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14970'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '7'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 161, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 164, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 166, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 165, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 161, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 164, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          dynamic alloca
...
--- !Passed
Pass:            openmp
Name:            Region
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - Construct:       parallel loop
  - String:          ' construct transformed'
...
--- !Passed
Pass:            openmp
Name:            Region
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - Construct:       parallel loop
  - String:          ' construct transformed'
...
--- !Passed
Pass:            openmp
Name:            Region
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - Construct:       parallel loop
  - String:          ' construct transformed'
...
--- !Passed
Pass:            openmp
Name:            Region
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - Construct:       parallel loop
  - String:          ' construct transformed'
...
--- !Passed
Pass:            openmp
Name:            Region
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - Construct:       parallel loop
  - String:          ' construct transformed'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted
    DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted
    DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted.11
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted.11
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 50, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 63, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          advect.extracted
    DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          advect.extracted
    DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 111, Column: 5 }
Function:        advect
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 150, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          project.extracted.20
    DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          project.extracted.20
    DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          project.extracted
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          project.extracted
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 129, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 140, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 141, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 161, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 164, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 165, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 166, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 43 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 43, Column: 43 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            lshr
    DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 44, Column: 32 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 44, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 44, Column: 35 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 44, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 44, Column: 35 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 44, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 44, Column: 47 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 44, Column: 47 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 44, Column: 52 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 44, Column: 52 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 47, Column: 69 }
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 47, Column: 69 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        lin_solve.extracted
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 43, Column: 43 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 32 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 35 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 47 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 52 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 47, Column: 69 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 43, Column: 43 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 32 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 35 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 47 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 44, Column: 52 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 47, Column: 69 }
Function:        lin_solve.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 29 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 23, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 25, Column: 29 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 25, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 46 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 23, Column: 46 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 56, Column: 43 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 56, Column: 43 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            lshr
    DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 57, Column: 32 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 57, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 57, Column: 35 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 57, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 57, Column: 35 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 57, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 57, Column: 47 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 57, Column: 47 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 57, Column: 52 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 57, Column: 52 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 60, Column: 69 }
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 60, Column: 69 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        lin_solve.extracted.11
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 56, Column: 43 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 32 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 35 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 47 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 52 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 60, Column: 69 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 56, Column: 43 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 32 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 35 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 47 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 57, Column: 52 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 60, Column: 69 }
Function:        lin_solve.extracted.11
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 42, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 42, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            lshr
    DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 43, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 55, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 55, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            lshr
    DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 56, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve
Args:
  - String:          'hoisting '
  - Inst:            bitcast
    DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: solver.c, Line: 37, Column: 5 }
Function:        lin_solve
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 86, Column: 39 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 86, Column: 39 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 87, Column: 21 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 87, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 87, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 87, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 88, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 88, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 91, Column: 28 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 91, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 91, Column: 30 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            fadd
    DebugLoc:        { File: solver.c, Line: 91, Column: 30 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 94, Column: 24 }
Function:        advect.extracted
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 98, Column: 28 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 98, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 98, Column: 30 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            fadd
    DebugLoc:        { File: solver.c, Line: 98, Column: 30 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 101, Column: 24 }
Function:        advect.extracted
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 107, Column: 38 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 107, Column: 38 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 107, Column: 13 }
Function:        advect.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 107, Column: 13 }
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 94, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 95, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 101, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 102, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 94, Column: 24 }
Function:        advect.extracted
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 101, Column: 24 }
Function:        advect.extracted
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 86, Column: 39 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 87, Column: 21 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 87, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 88, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 107, Column: 38 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 107, Column: 13 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: solver.c, Line: 94, Column: 24 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: solver.c, Line: 94, Column: 24 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: solver.c, Line: 101, Column: 24 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
    DebugLoc:        { File: solver.c, Line: 101, Column: 24 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 86, Column: 39 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 87, Column: 21 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 87, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 88, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 107, Column: 38 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 107, Column: 13 }
Function:        advect.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 87, Column: 15 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 88, Column: 15 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 103, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 104, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 105, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: solver.c, Line: 106, Column: 16 }
Function:        advect.extracted
Args:
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 120, Column: 39 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 120, Column: 39 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 121, Column: 42 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 121, Column: 42 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 121, Column: 44 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 121, Column: 44 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 121, Column: 44 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 121, Column: 44 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 122, Column: 41 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 122, Column: 41 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 122, Column: 78 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 122, Column: 78 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 121, Column: 17 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 121, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 123, Column: 17 }
Function:        project.extracted.20
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 123, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 120, Column: 39 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 121, Column: 42 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 121, Column: 44 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 122, Column: 41 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 121, Column: 17 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 123, Column: 17 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 120, Column: 39 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 121, Column: 42 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 121, Column: 44 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 122, Column: 41 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 121, Column: 17 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 123, Column: 17 }
Function:        project.extracted.20
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 135, Column: 39 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 135, Column: 39 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 136, Column: 39 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 136, Column: 39 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 136, Column: 39 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 136, Column: 39 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 136, Column: 37 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: solver.c, Line: 136, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 136, Column: 44 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 136, Column: 44 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 136, Column: 46 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 136, Column: 46 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 136, Column: 17 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 136, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 137, Column: 17 }
Function:        project.extracted
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: solver.c, Line: 137, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 135, Column: 39 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 136, Column: 39 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 136, Column: 44 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 136, Column: 17 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 17 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 44 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 136, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 62 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 136, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 29 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 137, Column: 29 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 136, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 135, Column: 39 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 136, Column: 39 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 136, Column: 44 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 136, Column: 17 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 17 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 44 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 136, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 62 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 136, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 137, Column: 29 }
Function:        project.extracted
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 137, Column: 29 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 136, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted
    DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted
    DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted.11
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted.11
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 50, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 63, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          advect.extracted
    DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          advect.extracted
    DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 111, Column: 5 }
Function:        advect
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 150, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          project.extracted.20
    DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          project.extracted.20
    DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          project.extracted
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          project.extracted
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 129, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 140, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 141, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 161, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 164, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 165, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 166, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted
    DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted
    DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted.11
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          lin_solve.extracted.11
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 50, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 63, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          advect.extracted
    DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          advect.extracted
    DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 111, Column: 5 }
Function:        advect
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 150, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          project.extracted.20
    DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          project.extracted.20
    DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - Callee:          __kmpc_for_static_init_8
  - String:          ' will not be inlined into '
  - Caller:          project.extracted
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          project.extracted
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 129, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 140, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 141, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 71, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 161, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 164, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 165, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: solver.c, Line: 166, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          no alwaysinline attribute
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: solver.c, Line: 37, Column: 5 }
Function:        lin_solve
Args:
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeLibcall
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve
Args:
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeInstruction
DebugLoc:        { File: solver.c, Line: 37, Column: 5 }
Function:        lin_solve
Args:
  - String:          'loop not vectorized: '
  - String:          instruction cannot be vectorized
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: solver.c, Line: 37, Column: 5 }
Function:        lin_solve
Args:
  - String:          loop not vectorized
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: solver.c, Line: 37, Column: 5 }
Function:        lin_solve
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        set_bnd
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        set_bnd
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 9 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 9 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            loop-vectorize
Name:            VectorizationNotBeneficial
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          the cost-model indicates that vectorization is not beneficial
...
--- !Missed
Pass:            loop-vectorize
Name:            InterleavingNotBeneficial
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          the cost-model indicates that interleaving is not beneficial
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 84, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 84, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 84, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 87, Column: 29 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 84, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 107, Column: 38 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 108, Column: 36 }
Function:        advect.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            loop-vectorize
Name:            VectorizationNotBeneficial
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          the cost-model indicates that vectorization is not beneficial
...
--- !Missed
Pass:            loop-vectorize
Name:            InterleavingNotBeneficial
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          the cost-model indicates that interleaving is not beneficial
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 44, Column: 52 }
Function:        lin_solve.extracted
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 46, Column: 49 }
Function:        lin_solve.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            loop-vectorize
Name:            VectorizationNotBeneficial
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          the cost-model indicates that vectorization is not beneficial
...
--- !Missed
Pass:            loop-vectorize
Name:            InterleavingNotBeneficial
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          the cost-model indicates that interleaving is not beneficial
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 57, Column: 52 }
Function:        lin_solve.extracted.11
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 59, Column: 49 }
Function:        lin_solve.extracted.11
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            loop-vectorize
Name:            VectorizationNotBeneficial
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          the cost-model indicates that vectorization is not beneficial
...
--- !Missed
Pass:            loop-vectorize
Name:            InterleavingNotBeneficial
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          the cost-model indicates that interleaving is not beneficial
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 136, Column: 44 }
Function:        project.extracted
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 137, Column: 44 }
Function:        project.extracted
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            loop-vectorize
Name:            VectorizationNotBeneficial
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          the cost-model indicates that vectorization is not beneficial
...
--- !Missed
Pass:            loop-vectorize
Name:            InterleavingNotBeneficial
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          the cost-model indicates that interleaving is not beneficial
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 121, Column: 42 }
Function:        project.extracted.20
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 122, Column: 41 }
Function:        project.extracted.20
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 144, Column: 1 }
Function:        dens_step
Args:
  - NumSpills:       '1'
  - String:          ' spills '
  - TotalSpillsCost: '1.000000e+00'
  - String:          ' total spills cost '
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '1.000000e+00'
  - String:          ' total reloads cost '
  - NumVRCopies:     '5'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.102941e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
Function:        dens_step
Args:
  - NumStackBytes:   '56'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '16'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 32 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 41 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '30'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 145, Column: 0 }
Function:        dens_step
Args:
  - NumInstructions: '134'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
Function:        advect
Args:
  - NumStackBytes:   '152'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 86, Column: 9 }
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '43'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 111, Column: 5 }
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 75, Column: 0 }
Function:        advect
Args:
  - NumInstructions: '76'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 37, Column: 5 }
Function:        lin_solve
Args:
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '1.587500e+01'
  - String:          ' total reloads cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 34, Column: 1 }
Function:        lin_solve
Args:
  - NumSpills:       '1'
  - String:          ' spills '
  - TotalSpillsCost: '1.000000e+00'
  - String:          ' total spills cost '
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '1.587500e+01'
  - String:          ' total reloads cost '
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.000000e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
Function:        lin_solve
Args:
  - NumStackBytes:   '104'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '27'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 63, Column: 9 }
Function:        lin_solve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 43, Column: 43 }
Function:        lin_solve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 42, Column: 14 }
Function:        lin_solve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '20'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 50, Column: 9 }
Function:        lin_solve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 66, Column: 1 }
Function:        lin_solve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
Function:        lin_solve
Args:
  - NumInstructions: '93'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 19, Column: 1 }
Function:        set_bnd
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.619048e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
Function:        set_bnd
Args:
  - NumStackBytes:   '48'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 43 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '34'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
Function:        set_bnd
Args:
  - NumInstructions: '101'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 153, Column: 1 }
Function:        vel_step
Args:
  - NumSpills:       '3'
  - String:          ' spills '
  - TotalSpillsCost: '3.000000e+00'
  - String:          ' total spills cost '
  - NumReloads:      '4'
  - String:          ' reloads '
  - TotalReloadsCost: '4.000000e+00'
  - String:          ' total reloads cost '
  - NumVRCopies:     '11'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '3.205882e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
Function:        vel_step
Args:
  - NumStackBytes:   '72'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '16'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 32 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 41 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 41 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 70, Column: 27 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '59'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 154, Column: 0 }
Function:        vel_step
Args:
  - NumInstructions: '250'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 114, Column: 1 }
Function:        project
Args:
  - NumSpills:       '8'
  - String:          ' spills '
  - TotalSpillsCost: '8.000000e+00'
  - String:          ' total spills cost '
  - NumReloads:      '9'
  - String:          ' reloads '
  - TotalReloadsCost: '9.000000e+00'
  - String:          ' total reloads cost '
  - NumVRCopies:     '6'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '5.000000e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
Function:        project
Args:
  - NumStackBytes:   '168'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '21'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 120, Column: 9 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '21'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '34'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '21'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '32'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 135, Column: 9 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '19'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 140, Column: 5 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '15'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 115, Column: 0 }
Function:        project
Args:
  - NumInstructions: '203'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - NumVRCopies:     '12'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.562500e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 81, Column: 1 }
Function:        advect.extracted
Args:
  - NumSpills:       '15'
  - String:          ' spills '
  - TotalSpillsCost: '1.000000e+01'
  - String:          ' total spills cost '
  - NumReloads:      '15'
  - String:          ' reloads '
  - TotalReloadsCost: '4.000000e+00'
  - String:          ' total reloads cost '
  - NumVRCopies:     '12'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.562500e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
Function:        advect.extracted
Args:
  - NumStackBytes:   '200'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '31'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '30'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 86, Column: 39 }
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '18'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 84, Column: 38 }
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 84, Column: 27 }
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '70'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 84, Column: 38 }
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 84, Column: 38 }
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '21'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 81, Column: 5 }
Function:        advect.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 81, Column: 0 }
Function:        advect.extracted
Args:
  - NumInstructions: '198'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '2.390625e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 39, Column: 1 }
Function:        lin_solve.extracted
Args:
  - NumSpills:       '1'
  - String:          ' spills '
  - TotalSpillsCost: '5.000000e-01'
  - String:          ' total spills cost '
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '5.000000e-01'
  - String:          ' total reloads cost '
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '2.390625e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
Function:        lin_solve.extracted
Args:
  - NumStackBytes:   '88'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '16'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '24'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 39, Column: 9 }
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 43, Column: 43 }
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 42, Column: 42 }
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 43, Column: 35 }
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '29'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 42, Column: 42 }
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 42, Column: 42 }
Function:        lin_solve.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 39, Column: 0 }
Function:        lin_solve.extracted
Args:
  - NumInstructions: '109'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.593750e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 52, Column: 1 }
Function:        lin_solve.extracted.11
Args:
  - NumSpills:       '1'
  - String:          ' spills '
  - TotalSpillsCost: '5.000000e-01'
  - String:          ' total spills cost '
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '5.000000e-01'
  - String:          ' total reloads cost '
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.593750e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
Function:        lin_solve.extracted.11
Args:
  - NumStackBytes:   '88'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '16'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '24'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 52, Column: 9 }
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 56, Column: 43 }
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 55, Column: 42 }
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 56, Column: 35 }
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '29'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 55, Column: 42 }
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 55, Column: 42 }
Function:        lin_solve.extracted.11
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
Function:        lin_solve.extracted.11
Args:
  - NumInstructions: '108'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '7.968750e+00'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 131, Column: 1 }
Function:        project.extracted
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '7.968750e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
Function:        project.extracted
Args:
  - NumStackBytes:   '88'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '15'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '24'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 131, Column: 5 }
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 136, Column: 39 }
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 134, Column: 38 }
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 134, Column: 27 }
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '26'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 134, Column: 38 }
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 134, Column: 38 }
Function:        project.extracted
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
Function:        project.extracted
Args:
  - NumInstructions: '103'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '7.968750e+00'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 116, Column: 1 }
Function:        project.extracted.20
Args:
  - NumSpills:       '1'
  - String:          ' spills '
  - TotalSpillsCost: '5.000000e-01'
  - String:          ' total spills cost '
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '5.000000e-01'
  - String:          ' total reloads cost '
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '7.968750e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
Function:        project.extracted.20
Args:
  - NumStackBytes:   '88'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '16'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '24'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 116, Column: 5 }
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 120, Column: 39 }
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 119, Column: 38 }
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 119, Column: 27 }
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '26'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 119, Column: 38 }
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 119, Column: 38 }
Function:        project.extracted.20
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 116, Column: 0 }
Function:        project.extracted.20
Args:
  - NumInstructions: '107'
  - String:          ' instructions in function'
...
